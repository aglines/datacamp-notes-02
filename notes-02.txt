notes - int py

Matplotlib
Data visualization is a key skill for aspiring data scientists. Matplotlib makes it easy to create meaningful and insightful plots. In this chapter, you’ll learn how to build various types of plots, and customize them to be more visually appealing and interpretable.

VIDEO LECTURE
Matplotlib plots
import matplotlib.pyplot as plt

get 2 lists named year, pop

plt.plot(year, pop) - first is x horiz axis, 2nd is y vert axis
shows the line connecting all the pts, but not the dt pts really themselves

plt.show()

plt.scatter(year, pop)
shows the data pts but no line connecting them
adv - shows the full number of dt pts, which line plot does not


Line plot (1) 
# Print the last item of gdp_cap and life_exp
print(gdp_cap[-1], life_exp[-1])
# Make a line plot, gdp_cap on the x-axis, life_exp on the y-axis
#import matplotlib.pyplot as plt
plt.plot(gdp_cap, life_exp)
# Display the plot
plt.show()

Line Plot (2): Interpretation 
bc there is a line, we can guess what the populatn w b in a certain year

Line plot (3) 
# Print the last item of gdp_cap and life_exp
print(gdp_cap[-1])
print(life_exp[-1])
# Make a line plot, gdp_cap on the x-axis, life_exp on the y-axis
plt.plot(gdp_cap, life_exp)
# Display the plot
plt.show()

plot is just messy lines not connecting anything logícally
instead use a scatter plot

Scatter Plot (1) 
plt.scatter(gdp_cap, life_exp)
use a logarithmic scale to show a correlation
plt.xscale('log')

Plot doesnt clear automatically, even in DC's py shell - what is that fn?
matplotlib.pyplot.clf()    # clears figure
matplotlib.pyplot.cla()     # clears only axes


Scatter plot (2) 
ok the point here is that correct theres no clear correlation btwn the 2 datasets we used

#####################################################
Histogram
VIDEO LECTURE

plt.hist(values, bins=3)

the distribution of datapoints in dataset
imagine all dt pts in a set on a number line
then divide the line into equal bins,
now place all dt pts are in each bin,
the height of the column shows how many dt pts live in that range

help(plt.hist)
most impt args are the data list, and the number of bins

Build a histogram (1) 
# Build histogram with 5 bins
plt.hist(life_exp, 5)
# Show and clean up plot
plt.show()
plt.clf()

Build a histogram (2): bins 
# Build histogram with 20 bins
plt.hist(life_exp, 20)
# Show and clean up again
plt.show()
plt.clf()


Build a histogram (3): compare 
# Histogram of life_exp, 15 bins
plt.clf()
plt.hist(life_exp, 15)
# Show and clear plot
plt.show()
plt.clf()
# Histogram of life_exp1950, 15 bins
plt.hist(life_exp1950, 15)
# Show and clear plot again
plt.show()
plt.clf()


Choose the right plot (1) 
did grades on a test follow a certain distribution?
Distribution? Choose a histogram

Choose the right plot (2) 
did longer answers on exam questions correlate with higher grades?
Correlation btwn two data sets? SCATTERPLOT.

Choose the right plot (my own)
How to predict the future value of something, given two datasets if the value isn't shown?
Choose a LINE PLOT - if there's a smooth line, you can find it 

#####################################################
Customization 
VIDEO LECTURE
diff plot types
can change color shape labels axes
it depends on the dt you have, & the story you want to tell
label axes
plt.xlabel('year')
plt.ylabel('year')
plt.title("this is my data")
plt.yticks([0,2,4,6])
    # 2nd list in yticks labels them:
plt.yticks([0,2,4],
            ['zero', '200','400'])

even after this you can append other data values to the lists already done,
to extend the graph for a more complete picture


####### Labels - Axis, Title
plt.scatter(gdp_cap, life_exp)  ;  plt.xscale('log') 

# Define axis labels, add to plot
xlab = 'GDP per Capita [in USD]'
ylab = 'Life Expectancy [in years]'
plt.xlabel(xlab)
plt.ylabel(ylab)

### define the title and add it to plot
title = 'World Development in 2007'
plt.title(title)
plt.show()


####### TICKS - define, then add to plot structure

xtick_val = [100, 1000, 100000]
xtick_label
plt.xticks(xtick_val, xtick_label)

ytick_val
ytick_label
plt.yticks(ytick_val, ytick_label)


Sizes 
Change size of each scatterplot data point to show its value
?plt.scatter
#   s : float or array-like, shape (n, ), optional
#    The marker size in points**2.
#    Default is ``rcParams['lines.markersize'] ** 2``.

Colors 
plt.scatter(x = gdp_cap, y = life_exp, s = np.array(pop) * 2, c = col, alpha = 0.8)
    # col is a dict (datatype) defined elsewhere, 
col = { 'Asia':'red', 'Europe':'green', 'Africa':'blue', ...}
alpha is how transparent the data point bubbles are, 0 to 1


Other - Grid, Text wherever
Add text in specified x,y coordinates 
plt.text(1550, 71, 'India')   # this will put the word "india" around where the data bubble ends up

plt.grid(True) 
Grid shows lines on the already defined xticks or yticks values 

Interpretation 
    meh.  questions are bad, & answers dont' rEALLY matchchart lol




